{"version":3,"sources":["next-date.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-date.js","sourcesContent":["(function () {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n  var nxCompare = nx.compare || require('@feizheng/next-compare');\n  var dateFormat = require('dateformat');\n  var REPLACE_RE = /-/g;\n  var DATE_DASH = '/';\n  var STRING = 'string';\n  var DEFAULT_FORMAT = 'yyyy-mm-dd HH:MM:ss';\n  var INVALID_DATE = 'Invalid Date';\n\n  /**\n   * dateStr.replace(/\\s/g,'T').replace(/\\//g,'-');\n   * http://www.cnblogs.com/Fooo/p/5284421.html\n   * http://blog.csdn.net/sinat_31257007/article/details/49208789\n   * @thanks to:\n   * http://blog.stevenlevithan.com/archives/date-time-format\n   * https://github.com/felixge/node-dateformat\n   * bug:\n   * safari invalid date\n   */\n\n  var NxDate = nx.declare('nx.Date', {\n    statics: {\n      now: function () {\n        return Date.now() || +new Date();\n      },\n      create: function (inTarget) {\n        switch (true) {\n          case inTarget instanceof Date:\n            return inTarget;\n          case typeof inTarget === STRING:\n            var date = new Date(inTarget);\n            return date.toString() === INVALID_DATE\n              ? new Date(inTarget.replace(REPLACE_RE, DATE_DASH))\n              : date;\n          case inTarget == null:\n            return new Date();\n          default:\n            return new Date(inTarget);\n        }\n      },\n      compare: function (inTarget1, inTarget2) {\n        var timestamp1 = +this.create(inTarget1);\n        var timestamp2 = +this.create(inTarget2);\n        return nxCompare(timestamp1, timestamp2);\n      },\n      format: function (inTarget, inFmt) {\n        var target = this.create(inTarget);\n        return dateFormat(target, inFmt || DEFAULT_FORMAT);\n      },\n      timezoneOffset: function () {\n        return -new Date().getTimezoneOffset() / 60;\n      }\n    }\n  });\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NxDate;\n  }\n})();\n"]}